/* eslint-disable jsx-a11y/anchor-has-content */
/* eslint-disable jsx-a11y/anchor-is-valid */
import React from 'react';
import useBaseUrl from '@docusaurus/useBaseUrl';
import { CoordinationType, Component } from '../../../src/app/constants';
import { COMPONENT_COORDINATION_TYPES } from '../../../src/app/state/coordination';

import { coordinationTypeConfigs } from '../../../src/demo/configs';

export default function AutogeneratedCoordinationTypes() {
  const baseUrl = useBaseUrl('/?dataset=');

  return (
    <>
      {Object.values(CoordinationType).map(ct => (
        <div key={ct}>
          <h3>
            <a aria-hidden="true" tabIndex="-1" className="anchor enhancedAnchor_node_modules-@docusaurus-theme-classic-lib-theme-Heading-" id={ct} />
            <code>{ct}</code>
            <a className="hash-link" href={`#${ct}`} title="Direct link to heading">&nbsp;</a>
          </h3>
          <p>
                    Used by the&nbsp;
            {Object.values(Component)
              .filter(cm => COMPONENT_COORDINATION_TYPES[cm].includes(ct))
              .map((cm, i, a) => {
                let innerText;
                if (i === a.length - 1) {
                  innerText = ` component${a.length === 1 ? '' : 's'}.`;
                } else if (i === a.length - 2) {
                  innerText = `${a.length === 2 ? '' : ','} and `;
                } else if (i < a.length - 2) {
                  innerText = ', ';
                }
                return (
                  <span key={cm}>
                    <code>{cm}</code>
                    <span>{innerText}</span>
                  </span>
                );
              })}
                        &nbsp;
            {Object.keys(coordinationTypeConfigs).includes(ct) && (
            <a href={`${baseUrl}${ct}`}>Try a demo!</a>
            )}
          </p>
        </div>
      ))}
    </>
  );
}
